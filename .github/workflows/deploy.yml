name: Deploy to VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        shell: pwsh
        run: npm install

      - name: Setup SSH
        shell: pwsh
        run: |
          # Create .ssh directory
          New-Item -ItemType Directory -Force -Path "$env:USERPROFILE\.ssh"
          
          # Write SSH key
          $env:VM_SSH_KEY | Out-File -FilePath "$env:USERPROFILE\.ssh\id_rsa" -Encoding utf8
          icacls "$env:USERPROFILE\.ssh\id_rsa" /inheritance:r /grant:r "$env:USERNAME`:R"
          
          # Add host to known_hosts
          ssh-keyscan -H $env:VM_HOST | Out-File -FilePath "$env:USERPROFILE\.ssh\known_hosts" -Append
          
          # Test SSH connection
          ssh -o StrictHostKeyChecking=no azureuser@$env:VM_HOST "echo 'SSH connection successful!'"

      - name: Deploy to VM
        shell: pwsh
        run: |
          # First, clean up any existing deployment
          $cleanupCommand = @'
            # Stop any existing Node.js process
            Get-Process node -ErrorAction SilentlyContinue | Stop-Process -Force
            
            # Clean up existing deployment
            Remove-Item -Path "C:\app" -Recurse -Force -ErrorAction SilentlyContinue
            New-Item -ItemType Directory -Force -Path "C:\app"
          '@
          
          ssh azureuser@$env:VM_HOST $cleanupCommand
          
          # Copy files to VM
          scp -r ./* azureuser@$env:VM_HOST:/home/azureuser/app/
          
          # Deploy and start the application
          $deployCommand = @'
            cd /home/azureuser/app
            
            # Install dependencies
            npm install
            
            # Check if port 80 is in use
            netstat -ano | findstr :80
            
            # Start the application
            Start-Process -FilePath "node" -ArgumentList "src/index.js" -RedirectStandardOutput "app.log" -RedirectStandardError "app.log" -NoNewWindow
            
            # Wait for the application to start
            Start-Sleep -Seconds 5
            
            # Check if the process is running
            Get-Process node
            
            # Check the application logs
            Get-Content app.log
            
            # Check if the port is actually listening
            netstat -ano | findstr :80
            
            # Test the endpoint locally
            Invoke-WebRequest -Uri "http://localhost/sayHello" -UseBasicParsing
            
            # Check system logs for any errors
            Get-EventLog -LogName System -Newest 50 | Where-Object { $_.Source -like "*node*" -or $_.Message -like "*error*" }
          '@
          
          ssh azureuser@$env:VM_HOST $deployCommand 